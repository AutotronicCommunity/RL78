#pragma once
//=====================================================================//
/*!	@file
	@brief	RL78/L1C グループ・ポート・レジスター定義
    @author 平松邦仁 (hira@rvf-rc45.net)
	@copyright	Copyright (C) 2016 Kunihito Hiramatsu @n
				Released under the MIT license @n
				https://github.com/hirakuni45/RL78/blob/master/LICENSE
*/
//=====================================================================//
#include "common/io_utils.hpp"

namespace device {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF20> > PM0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF21> > PM1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF22> > PM2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF23> > PM3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF24> > PM4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM5)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF25> > PM5;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM6)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF26> > PM6;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM7)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF27> > PM7;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM8)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF28> > PM8;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM12)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF2C> > PM12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM14)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF2E> > PM14;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・レジスタ(PM15)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF2F> > PM15;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF00> > P0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF01> > P1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF02> > P2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF03> > P3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF04> > P4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P5)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF05> > P5;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P6)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF06> > P6;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P7)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF07> > P7;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P8)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF08> > P8;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P12)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF0C> > P12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P13)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF0D> > P13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P14)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF0E> > P14;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・レジスタ(P15)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xFFF0F> > P15;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0030> > PU0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0031> > PU1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0032> > PU2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0033> > PU3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0034> > PU4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU5)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0035> > PU5;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU6)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0036> > PU6;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU7)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0037> > PU7;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU8)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0038> > PU8;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU12)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF003C> > PU12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  プルアップ抵抗オプション・レジスタ(PU14)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF003E> > PU14;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート入力モード・レジスタ(PIM0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0040> > PIM0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート入力モード・レジスタ(PIM1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0041> > PIM1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート入力モード・レジスタ(PIM2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0042> > PIM2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート入力モード・レジスタ(PIM3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0043> > PIM3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート入力モード・レジスタ(PIM4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0044> > PIM4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート出力モード・レジスタ(POM0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0050> > POM0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート出力モード・レジスタ(POM1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0051> > POM1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート出力モード・レジスタ(POM2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0052> > POM2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート出力モード・レジスタ(POM3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0053> > POM3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート出力モード・レジスタ(POM4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0054> > POM4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・コントロール・レジスタ(PMC2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0062> > PMC2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・コントロール・レジスタ(PMC4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF0064> > PMC4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート・モード・コントロール・レジスタ(PMC14)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static basic_rw_t< rw8_t<0xF006E> > PMC14;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  A/D ポート・コンフィギュレーション・レジスタ(ADPC)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0076> ADPC;
	static bit_rw_t<rw8_t<0xF0076>, bitpos::B2> ADPC2;
	static bit_rw_t<rw8_t<0xF0076>, bitpos::B1> ADPC1;
	static bit_rw_t<rw8_t<0xF0076>, bitpos::B0> ADPC0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  周辺I/Oリダイレクション・レジスタ（PIOR）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0077> PIOR;
	static bit_rw_t<rw8_t<0xF0077>, bitpos::B3> PIOR3;
	static bit_rw_t<rw8_t<0xF0077>, bitpos::B2> PIOR2;
	static bit_rw_t<rw8_t<0xF0077>, bitpos::B1> PIOR1;
	static bit_rw_t<rw8_t<0xF0077>, bitpos::B0> PIOR0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  グローバル・アナログ・インプット・ディスエーブル・レジスタ(GAIDIS)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF007C> GAIDIS;
	static bit_rw_t<rw8_t<0xF007C>, bitpos::B0> GAIDIS0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ0 (PFSEG0)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0300> PFSEG0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ1 (PFSEG1)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0301> PFSEG1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ2 (PFSEG2)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0302> PFSEG2;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ3 (PFSEG3)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0303> PFSEG3;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ4 (PFSEG4)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0304> PFSEG4;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ5 (PFSEG5)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0305> PFSEG5;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  LCDポート・ファンクション・レジスタ6 (PFSEG6)
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0306> PFSEG6;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ポート番号
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	enum class port_no : uint8_t {
		P0,		///< ポート０
		P1,		///< ポート１
		P2,		///< ポート２
		P3,		///< ポート３
		P4,		///< ポート４
		P5,		///< ポート５
		P6,		///< ポート６
		P7,		///< ポート７
		P8,		///< ポート８
		P9,		///< ポート９
		P10,	///< ポート１０
		P11,	///< ポート１１
		P12,	///< ポート１２
		P13,	///< ポート１３
		P14,	///< ポート１４
		P15,	///< ポート１５
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シングル・ポート定義テンプレート
		@param[in]	port	ポート番号（０～１５）
		@param[in]	bpos	ビット位置（０～７）	
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <port_no port, bitpos bpos>
	struct PORT {

		static const uint8_t port_no  = static_cast<uint8_t>(port);
		static const uint8_t port_bit = static_cast<uint8_t>(bpos);

		//-----------------------------------------------------------------//
		/*!
			@brief  ポート方向レジスタ
		*/
		//-----------------------------------------------------------------//
		struct dir_t {
			/// ポート・モード・レジスタ
			static bit_rw_t<rw8_t<0xFFF20 + static_cast<uint8_t>(port)>, bpos> PM;

			void operator = (bool val) { PM = !val; }
			bool operator () () { return !PM(); }
		};
		static dir_t DIR;

		/// ポート・レジスタ
		static bit_rw_t<rw8_t<0xFFF00 + static_cast<uint8_t>(port)>, bpos> P;

		/// プルアップ抵抗オプション・レジスタ
		static bit_rw_t<rw8_t<0xF0030 + static_cast<uint8_t>(port)>, bpos> PU;

		/// ポート出力モード・レジスタ（オープンドレイン出力）
		static bit_rw_t<rw8_t<0xF0050 + static_cast<uint8_t>(port)>, bpos> OD;
		static bit_rw_t<rw8_t<0xF0050 + static_cast<uint8_t>(port)>, bpos> POM;

		/// ポート入力モード・レジスタ
		static bit_rw_t<rw8_t<0xF0040 + static_cast<uint8_t>(port)>, bpos> PIM;	

		/// ポート・モード・コントロール・レジスタ
		static bit_rw_t<rw8_t<0xF0060 + static_cast<uint8_t>(port)>, bpos> PMC;
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  無効ポート定義
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	struct NULL_PORT {

		static const uint8_t port_no  = 0xff;
		static const uint8_t port_bit = 0xff;

		struct null_t {
			void operator = (bool f) { }
			bool operator () () const { return 0; } 
		};

		//-----------------------------------------------------------------//
		/*!
			@brief  ポート方向レジスタ
		*/
		//-----------------------------------------------------------------//
		static null_t DIR;


		//-----------------------------------------------------------------//
		/*!
			@brief  プルアップ制御・レジスタ
		*/
		//-----------------------------------------------------------------//
		static null_t PU;


		//-----------------------------------------------------------------//
		/*!
			@brief  オープンドレイン制御・レジスタ
		*/
		//-----------------------------------------------------------------//
		static null_t OD;


		//-----------------------------------------------------------------//
		/*!
			@brief  ポート・レジスタ
		*/
		//-----------------------------------------------------------------//
		static null_t P;

	};
}
