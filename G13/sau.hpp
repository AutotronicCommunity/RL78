#pragma once
//=====================================================================//
/*!	@file
	@brief	RL78/G13 グループ・シリアル・アレイ・ユニット・レジスター定義 @n
			Copyright 2016 Kunihito Hiramatsu
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include "common/io_utils.hpp"

namespace device {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック選択レジスタm（SPSm）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SPSm : public T {
		using T::operator =;
		using T::operator ();
		using T::operator |=;
		using T::operator &=;

		bits_rw_t<T, 0, 4>	PRS0;
		bits_rw_t<T, 4, 4>	PRS1;
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック選択レジスタ０（SPS0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SPSm< rw8_t<0xF0126> > SPS0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック選択レジスタ１（SPS1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SPSm< rw8_t<0xF0166> > SPS1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・モード・レジスタmn（SMRmn）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SMRmn : public T {
		using T::operator =;
		using T::operator ();
		using T::operator |=;
		using T::operator &=;

		bit_rw_t<T, 15>		CKS;	///< チャネルnの動作クロック（f MCK ）の選択
		bit_rw_t<T, 14>		CCS;	///< チャネルnの転送クロック（f TCLK ）の選択
		bit_rw_t<T,  8>		STS;	///< スタート・トリガ要因の選択
		bit_rw_t<T,  6>		SIS;	///< UARTモードでのチャネルnの受信データのレベル反転の制御
		bits_rw_t<T,  1, 2>	MD;		///< チャネルnの動作モードの設定
		bit_rw_t<T,  0>		MD0;	///< チャネルnの割り込み要因の選択
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・モード・レジスタ００（SMR00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SMRmn< rw16_t<0xF0110> > SMR00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・モード・レジスタ０３（SMR03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SMRmn< rw16_t<0xF0116> > SMR03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・モード・レジスタ１０（SMR10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SMRmn< rw16_t<0xF0150> > SMR10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・モード・レジスタ１３（SMR13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SMRmn< rw16_t<0xF0156> > SMR13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタmn（SCRmn）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SCRmn : public T {
		using T::operator =;
		using T::operator ();
		using T::operator |=;
		using T::operator &=;

		bit_rw_t<T, 15>		TXE;	///< 送信モードの設定
		bit_rw_t<T, 14>		RXE;	///< 受信モードの設定
		bit_rw_t<T, 13>		DAP;	///< CSIモードでのデータとクロックの位相選択
		bit_rw_t<T, 12>		CKP;	///< CSIモードでのデータとクロックの位相選択

		bit_rw_t<T, 10>		EOC;	///< エラー割り込み信号（INTSREx（x = 0-3））のマスク制御
		bits_rw_t<T,  8, 2>	PTC;	///< UARTモードでのパリティ・ビットの設定
		bit_rw_t<T,  7>		DIR;	///< CSI, UARTモードでのデータ転送順序の選択

		bits_rw_t<T,  4, 2>	SLC;	///< UARTモードでのストップ・ビットの設定

		bits_rw_t<T,  0, 2>	DLS;	///< CSI, UARTモードでのデータ長の設定
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ００（SCR00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SCRmn< rw16_t<0xF0118> > SCR00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ０３（SCR03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SCRmn< rw16_t<0xF011E> > SCR03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ１０（SCR10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SCRmn< rw16_t<0xF0158> > SCR10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ１３（SCR13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SCRmn< rw16_t<0xF015E> > SCR13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ００（SDR00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xFFF10> SDR00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ００（SDR00L）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF10> SDR00L;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ００（SDR00H）@n
				動作クロックの分周による転送クロック設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF11> SDR00H;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ０１（SDR01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xFFF12> SDR01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ０１（SDR01L）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF12> SDR01L;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ０１（SDR01H）@n
				動作クロックの分周による転送クロック設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF13> SDR01H;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１０（SDR10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xFFF48> SDR10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１０（SDR10L）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF48> SDR10L;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１０（SDR10H）@n
				動作クロックの分周による転送クロック設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF49> SDR10H;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１１（SDR11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xFFF4A> SDR11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１１（SDR11L）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF4A> SDR11L;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・データ・レジスタ１１（SDR11H）@n
				動作クロックの分周による転送クロック設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static  rw8_t<0xFFF4B> SDR11H;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・フラグ・クリア・トリガ・レジスタmn（SIRmn）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SIRmn : public T {
		using T::operator =;
		using T::operator ();
		using T::operator |=;
		using T::operator &=;

		bit_rw_t<T, 2>	FEC;	///< チャネルnのフレーミング・エラー・フラグのクリア・トリガ
		bit_rw_t<T, 1>	PEC;	///< チャネルnのパリティ・エラー・フラグのクリア・トリガ
		bit_rw_t<T, 0>	OVC;	///< チャネルnのオーバラン・エラー・フラグのクリア・トリガ
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ００（SCR00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SIRmn< rw8_t<0xF0108> > SIR00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ０３（SCR03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SIRmn< rw8_t<0xF010E> > SIR03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ１０（SCR10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SIRmn< rw8_t<0xF0148> > SIR10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル通信動作設定レジスタ１３（SCR13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SIRmn< rw8_t<0xF014E> > SIR13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・ステータス・レジスタmn（SSRmn）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SSRmn : public T {
		using T::operator ();

		bit_ro_t<T, 6>	TSF;	///< チャネルnの通信状態表示フラグ
		bit_ro_t<T, 5>	BFF;	///< チャネルnのバッファ・レジスタ状態表示フラグ

		bit_ro_t<T, 2>	FEF;	///< チャネルnのフレーミング・エラー検出フラグ
		bit_ro_t<T, 1>	PEF;	///< チャネルnのパリティ／ACKエラー検出フラグ
		bit_ro_t<T, 0>	OVF;	///< チャネルnのオーバラン・エラー検出フラグ
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・ステータス・レジスタ００（SSR00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSRmn< ro8_t<0xF0100> > SSR00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・ステータス・レジスタ０３（SSR03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSRmn< ro8_t<0xF0106> > SSR03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・ステータス・レジスタ１０（SSR10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSRmn< ro8_t<0xF0140> > SSR10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・ステータス・レジスタ１３（SSR13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSRmn< ro8_t<0xF0146> > SSR13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ０（SS0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0122>	SS0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ００（SS00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0122>, 0>	SS00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ０１（SS01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0122>, 1>	SS01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ０２（SS02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0122>, 2>	SS02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ０３（SS03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0122>, 3>	SS03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ１（SS1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0162> SS1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ１０（SS10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0162>, 0> SS10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ１１（SS11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0162>, 1> SS11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ１２（SS12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0162>, 2> SS12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル開始レジスタ１３（SS13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0162>, 3> SS13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ０（ST0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0124> ST0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ００（SS00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0124>, 0> ST00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ０１（SS01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0124>, 1> ST01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ０２（SS02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0124>, 2> ST02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ０３（SS03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0124>, 3> ST03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ１（ST1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0164> ST1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ１０（SS10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0164>, 0> ST10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ１１（SS11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0164>, 1> ST11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ１２（SS12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0164>, 2> ST12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル停止レジスタ１３（SS13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0164>, 3> ST13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ０（SE0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static ro8_t<0xF0120> SE0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ００（SE00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<ro8_t<0xF0120>, 0> SE00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ０１（SE01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<ro8_t<0xF0120>, 1> SE01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ０２（SE02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<ro8_t<0xF0120>, 2> SE02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ０３（SE03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<ro8_t<0xF0120>, 3> SE03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ１（SE1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static ro8_t<0xF0160> SE1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ１０（SE10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_ro_t<ro8_t<0xF0160>, 0> SE10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ１１（SE11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_ro_t<ro8_t<0xF0160>, 1> SE11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ１２（SE12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_ro_t<ro8_t<0xF0160>, 2> SE12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・チャネル許可ステータス・レジスタ１３（SE13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_ro_t<ro8_t<0xF0160>, 3> SE13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ０（SOE0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF012A> SOE0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ００（SOE00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF012A>, 0> SOE00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ０１（SOE01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF012A>, 1> SOE01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ０２（SOE02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF012A>, 2> SOE02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ０３（SOE03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF012A>, 3> SOE03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ１（SOE1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF016A> SOE1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ１０（SOE10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF016A>, 0> SOE10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ１１（SOE11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF016A>, 1> SOE11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ１２（SOE12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF016A>, 2> SOE12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力許可レジスタ１３（SOE13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF016A>, 3> SOE13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ０（SO0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xF0128> SO0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ００（SO00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 0> SO00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ０１（SO1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 1> SO01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ０２（SO1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 2> SO02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ０３（SO3）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 3> SO03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ００（CKO00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 8> CKO00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ０１（CKO01）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 9> CKO01;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ０２（CKO02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 10> CKO02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ０３（CKO03）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0128>, 11> CKO03;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ１（SO1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw16_t<0xF0168> SO1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ１（SO10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 0> SO10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ１１（SO11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 1> SO11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ１２（SO12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 2> SO12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レジスタ１３（S13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 3> SO13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ１０（CKO10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 8> CKO10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ１１（CKO11）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 9> CKO11;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ１２（CKO12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 10> CKO12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・クロック・レジスタ１３（CKO13）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw16_t<0xF0168>, 11> CKO13;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レベル・レジスタ０（SOL0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0134> SOL0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レベル・レジスタ００（SOL00）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0134>, 0> SOL00;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レベル・レジスタ０２（SOL02）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0134>, 2> SOL02;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レベル・レジスタ１０（SOL10）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0174>, 0> SOL10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル出力レベル・レジスタ１２（SOL12）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0174>, 2> SOL12;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタm（SSCm）テンプレート
		@param[in]	T	アクセス・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class T>
	struct SSCm : public T {
		using T::operator =;
		using T::operator ();
		using T::operator |=;
		using T::operator &=;

		bit_rw_t<T, 1>	SSEC;
		bit_rw_t<T, 0>	SWC;
	};


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ０（SSC0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSCm<rw8_t<0xF0138> > SSC0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ０（SSEC0）@n
				SNOOZEモード時の通信エラー割り込み発生許可／停止の選択
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0138>, 1> SSEC0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ０（SWC0）@n
				SNOOZEモードの設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0138>, 0> SWC0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ１（SSC1）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static SSCm<rw8_t<0xF0178> > SSC1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ１（SSC1）@n
				SNOOZEモード時の通信エラー割り込み発生許可／停止の選択
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0178>, 1> SSEC1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  シリアル・スタンバイ・コントロール・レジスタ１（SSC1）@n
				SNOOZEモードの設定
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0178>, 0> SWC1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  入力切り替え制御レジスタ（ISC）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0073> ISC;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  入力切り替え制御レジスタ（ISC1）@n
				タイマ・アレイ・ユニットのチャネル7の入力切り替え
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0073>, 1> ISC1;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  入力切り替え制御レジスタ（ISC0）@n
				外部割り込み（INTP0）の入力切り替え
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0073>, 0> ISC0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ノイズ・フィルタ許可レジスタ0（NFEN0）
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static rw8_t<0xF0070> NFEN0;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ノイズ・フィルタ許可レジスタ0（NFEN30）
				RxD3端子のノイズ・フィルタ使用可否
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0070>, 6> NFEN30;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ノイズ・フィルタ許可レジスタ0（NFEN20）
				RxD2端子のノイズ・フィルタ使用可否
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0070>, 4> NFEN20;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ノイズ・フィルタ許可レジスタ0（NFEN10）
				RxD1端子のノイズ・フィルタ使用可否
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0070>, 2> NFEN10;


	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief  ノイズ・フィルタ許可レジスタ0（NFEN00）
				RxD0端子のノイズ・フィルタ使用可否
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	static bit_rw_t<rw8_t<0xF0070>, 0> NFEN00;
}
