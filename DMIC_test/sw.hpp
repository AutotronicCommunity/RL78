#pragma once
//=====================================================================//
/*!	@file
	@brief	スイッチ入力・クラス
    @author 平松邦仁 (hira@rvf-rc45.net)
	@copyright	Copyright (C) 2017 Kunihito Hiramatsu @n
				Released under the MIT license @n
				https://github.com/hirakuni45/RL78/blob/master/LICENSE
*/
//=====================================================================//
#include <cstdint>

namespace utils {

    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
    /*!
        @brief  SW2 クラス
		@param[in]	B0	ビット０
		@param[in]	B1	ビット１
    */
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class B0, class B1>
	class sw2 {
	public:
        //-----------------------------------------------------------------//
        /*!
            @brief  開始
        */
        //-----------------------------------------------------------------//
		void start() {
			B0::DIR = 0;
			B1::DIR = 0;
		}


        //-----------------------------------------------------------------//
        /*!
            @brief  値の取得
			@return 値
        */
        //-----------------------------------------------------------------//
		uint8_t get() const {
			uint8_t l = static_cast<uint8_t>(B0::P()) | (static_cast<uint8_t>(B1::P()) << 1);
			return l ^ 0b11;
		}
	};


    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
    /*!
        @brief  SW5 クラス
		@param[in]	B0	ビット０
		@param[in]	B1	ビット１
		@param[in]	B2	ビット２
		@param[in]	B3	ビット３
		@param[in]	B4	ビット４
    */
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template <class B0, class B1, class B2, class B3, class B4>
	class sw5 {
	public:
        //-----------------------------------------------------------------//
        /*!
            @brief  開始
        */
        //-----------------------------------------------------------------//
		void start() {
			B0::DIR = 0;
			B1::DIR = 0;
			B2::DIR = 0;
			B3::DIR = 0;
			B4::DIR = 0;
		}


        //-----------------------------------------------------------------//
        /*!
            @brief  値の取得
			@return 値
        */
        //-----------------------------------------------------------------//
		uint8_t get() const {
			uint8_t v = static_cast<uint8_t>(B0::P())
					 | (static_cast<uint8_t>(B1::P()) << 1)
					 | (static_cast<uint8_t>(B2::P()) << 2)
					 | (static_cast<uint8_t>(B3::P()) << 3)
					 | (static_cast<uint8_t>(B4::P()) << 4);
			return v ^ 0b11111;
		}
	};
}
